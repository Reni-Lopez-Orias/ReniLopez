{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction MensajeErrorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.control == null ? null : ctx_r0.control.requiredInput);\n  }\n}\nexport class MensajeErrorComponent {\n  constructor() {\n    this.errorMsg = '';\n  }\n  ngDoCheck() {\n    if (this.control) {\n      this.errorMsg = this.getErrors();\n    }\n    console.log(this.errorMsg);\n  }\n  getErrors() {\n    return Object.entries(this.control?.errors ?? {}).map(([key, msg]) => ({\n      key,\n      msg\n    }))[0]?.msg;\n  }\n}\nMensajeErrorComponent.ɵfac = function MensajeErrorComponent_Factory(t) {\n  return new (t || MensajeErrorComponent)();\n};\nMensajeErrorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MensajeErrorComponent,\n  selectors: [[\"app-mensaje-error\"]],\n  inputs: {\n    control: \"control\"\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"invalid-feedback\"]],\n  template: function MensajeErrorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MensajeErrorComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.control == null ? null : ctx.control.requiredInput);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.control == null ? null : ctx.control.minLength);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.control == null ? null : ctx.control.email);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAAAA,8BAAmE;IAAAA,YAA+B;IAAAA,iBAAM;;;;IAArCA,eAA+B;IAA/BA,kFAA+B;;;ACOlG,OAAM,MAAOC,qBAAqB;EAQhCC;IAFA,aAAQ,GAAW,EAAE;EAEL;EAEhBC,SAAS;IACP,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,SAAS,EAAE;;IAElCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;EAE5B;EAEAC,SAAS;IACP,OAAOG,MAAM,CAACC,OAAO,CAAC,IAAI,CAACN,OAAO,EAAEO,MAAM,IAAI,EAAE,CAAC,CAC9CC,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,GAAG,CAAgB,MAAM;MAAED,GAAG;MAAEC;IAAG,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,GAAG;EAC/D;;AArBWb,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAc;EAAAC;IAAAZ;EAAA;EAAAa;EAAAC;EAAAC;EAAAC;IAAA;MDPlCpB,sEAAwG;MACxGA,8BAA8B;MAAAA,YAA4B;MAAAA,iBAAM;MAChEA,8BAA8B;MAAAA,YAAwB;MAAAA,iBAAM;;;MAF7BA,6EAAiC;MAClCA,eAA4B;MAA5BA,wEAA4B;MAC5BA,eAAwB;MAAxBA,oEAAwB","names":["i0","MensajeErrorComponent","constructor","ngDoCheck","control","errorMsg","getErrors","console","log","Object","entries","errors","map","key","msg","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\shared\\mensaje-error\\mensaje-error.component.html","C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\shared\\mensaje-error\\mensaje-error.component.ts"],"sourcesContent":["<div class=\"invalid-feedback\" *ngIf=\"this.control?.requiredInput\" >{{this.control?.requiredInput}}</div>\n<div class=\"invalid-feedback\">{{this.control?.minLength }}</div>\n<div class=\"invalid-feedback\">{{this.control?.email }}</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mensaje-error',\n  templateUrl: './mensaje-error.component.html',\n  styleUrls: ['./mensaje-error.component.css']\n})\nexport class MensajeErrorComponent {\n\n\n  @Input(\"control\")\n  control: any; \n\n  errorMsg: string = '';\n\n  constructor() { }\n  \n  ngDoCheck() { \n    if (this.control) {\n      this.errorMsg = this.getErrors();\n    } \n    console.log(this.errorMsg);\n    \n  }\n  \n  getErrors( ): string {  \n    return Object.entries(this.control?.errors ?? {})\n      .map(([key, msg]: [string, any]) => ({ key, msg }))[0]?.msg;\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}