{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet UsuariosComponent = class UsuariosComponent {\n  constructor(_paisesService, _fb, _validadorFormUsuariosService, _spinnerService) {\n    this._paisesService = _paisesService;\n    this._fb = _fb;\n    this._validadorFormUsuariosService = _validadorFormUsuariosService;\n    this._spinnerService = _spinnerService;\n    this.spinner = true;\n    this.paises = new Array();\n    this.userForm = this._fb.group({\n      uid: [null],\n      nombre: ['reni', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['lopez', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correo: ['reni@reni.com', [Validators.required, this._validadorFormUsuariosService.requerido('Correo Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [Validators.maxLength(8)]],\n      paisResidencia: ['', [Validators.required]],\n      contacto: [false, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this._spinnerService.spinner$.emit(this.spinner);\n    this.getSpinner();\n    this.getPaises();\n  }\n  getSpinner() {\n    this._spinnerService.spinner$.subscribe(data => {\n      this.spinner = data;\n    });\n  }\n  validarTelefono(event) {\n    let patt = /^([0-9])$/;\n    return patt.test(event.key);\n  }\n  getPaises() {\n    this._paisesService.getPaises().subscribe(data => {\n      this.paises = data;\n      this.paises.sort((x, y) => x.nombre.localeCompare(y.nombre));\n      // tiempo para ver loading\n      setTimeout(() => {\n        this._spinnerService.spinner$.emit(false);\n      }, 1000);\n    });\n  }\n  submitForm() {\n    // this.userForm.get('fechaNacimiento')?.setValue(formatoFecha)\n    console.log(this.userForm);\n    if (this.userForm.valid) {\n      this.userForm.value.uid ? this.editarUsuario() : this.agregarUsuario();\n      this.userForm.reset();\n    }\n  }\n  agregarUsuario() {\n    console.log(this.userForm);\n  }\n  editarUsuario() {}\n};\nUsuariosComponent = __decorate([Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})], UsuariosComponent);\nexport { UsuariosComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","UsuariosComponent","constructor","_paisesService","_fb","_validadorFormUsuariosService","_spinnerService","Array","userForm","group","uid","nombre","required","requerido","minimo","apellido","correo","email","fechaNacimiento","telefono","maxLength","paisResidencia","contacto","ngOnInit","spinner$","emit","spinner","getSpinner","getPaises","subscribe","data","validarTelefono","event","patt","test","key","paises","sort","x","y","localeCompare","setTimeout","submitForm","console","log","valid","value","editarUsuario","agregarUsuario","reset","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\usuarios\\usuarios.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PaisModel } from 'src/app/core/models/Pais.model';\nimport { PaisesModel } from 'src/app/core/models/Paises.model';\nimport { PaisesService } from 'src/app/core/services/paises/paises.service';\nimport { SpinnerService } from 'src/app/core/services/spinner/spinner.service';\nimport { ValidadorFormUsuariosService } from 'src/app/core/validador-form-usuarios/validador-form-usuarios.service';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n\n  spinner: boolean = true;\n  userForm: FormGroup;\n  paises: Array<PaisModel> = new Array<PaisModel>();\n\n  public constructor(\n    private _paisesService: PaisesService,\n    private _fb: FormBuilder,\n    private _validadorFormUsuariosService: ValidadorFormUsuariosService,\n    public _spinnerService: SpinnerService\n  ) {\n\n    this.userForm = this._fb.group({\n      uid: [null],\n      nombre: ['reni', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['lopez', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correo: ['reni@reni.com', [Validators.required, this._validadorFormUsuariosService.requerido('Correo Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [Validators.maxLength(8)]],\n      paisResidencia: ['', [Validators.required]],\n      contacto: [false, [Validators.required]],\n    });\n\n  }\n\n  ngOnInit() {\n    this._spinnerService.spinner$.emit(this.spinner);\n    this.getSpinner();\n    this.getPaises();\n  }\n\n  getSpinner() {\n    this._spinnerService.spinner$.subscribe(data => {\n      this.spinner = data;\n    })\n  }\n\n  validarTelefono(event: any) {\n    let patt = /^([0-9])$/;\n    return patt.test(event.key);\n  }\n\n  getPaises() {\n\n    this._paisesService.getPaises().subscribe((data: PaisModel[]) => {\n      this.paises = data;\n      this.paises.sort((x, y) => x.nombre.localeCompare(y.nombre));\n\n      // tiempo para ver loading\n      setTimeout(() => {\n        this._spinnerService.spinner$.emit(false);\n      }, 1000);\n    })\n  }\n\n  submitForm() {\n\n\n    // this.userForm.get('fechaNacimiento')?.setValue(formatoFecha)\n\n    console.log(this.userForm);\n\n    if (this.userForm.valid) {\n\n\n\n      (this.userForm.value.uid) ? this.editarUsuario() : this.agregarUsuario();\n      this.userForm.reset();\n    }\n\n  }\n\n  agregarUsuario() {\n    console.log(this.userForm);\n\n  }\n\n  editarUsuario() {\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}