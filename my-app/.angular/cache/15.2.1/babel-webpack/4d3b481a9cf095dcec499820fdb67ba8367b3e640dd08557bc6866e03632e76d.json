{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction MensajeErrorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMsg, \" \");\n  }\n}\nexport class MensajeErrorComponent {\n  constructor() {\n    this.errorMsg = '';\n  }\n  ngDoCheck() {\n    if (this.control) {\n      this.errorMsg = this.getErrors();\n    }\n  }\n  getErrors() {\n    return Object.entries(this.control?.errors ?? {}).map(([key, msg]) => ({\n      key,\n      msg\n    }))[0]?.msg;\n  }\n}\nMensajeErrorComponent.ɵfac = function MensajeErrorComponent_Factory(t) {\n  return new (t || MensajeErrorComponent)();\n};\nMensajeErrorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MensajeErrorComponent,\n  selectors: [[\"app-mensaje-error\"]],\n  inputs: {\n    control: \"control\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function MensajeErrorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MensajeErrorComponent_div_0_Template, 2, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.control && ctx.control.errors && (ctx.control.dirty || ctx.control.touched));\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAAAA,8BAAiG;IAC7FA,YACA;IAQJA,iBAAM;;;;IATFA,eACA;IADAA,gDACA;;;ACKJ,OAAM,MAAOC,qBAAqB;EAQhCC;IAFA,aAAQ,GAAW,EAAE;EAEL;EAEhBC,SAAS;IACP,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,SAAS,EAAE;;EAEpC;EAEAA,SAAS;IACP,OAAOC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACJ,OAAO,EAAEK,MAAM,IAAI,EAAE,CAAC,CAC9CC,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,GAAG,CAAgB,MAAM;MAAED,GAAG;MAAEC;IAAG,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,GAAG;EAC/D;;AAnBWX,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAY;EAAAC;IAAAV;EAAA;EAAAW;EAAAC;EAAAC;EAAAC;IAAA;MDPlClB,sEAUM;;;MAVoBA,sGAAqE","names":["i0","MensajeErrorComponent","constructor","ngDoCheck","control","errorMsg","getErrors","Object","entries","errors","map","key","msg","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\shared\\mensaje-error\\mensaje-error.component.html","C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\shared\\mensaje-error\\mensaje-error.component.ts"],"sourcesContent":["<div class=\"text-danger\" *ngIf=\"control && control.errors && (control.dirty || control.touched)\">\n    {{errorMsg}}\n    <!-- <div *ngIf=\"control.errors.required\"><small>This field is required</small></div>\n    <div *ngIf=\"control.errors.email && control.touched\"><small>{{control.touched}}</small></div> -->\n    <!-- <div *ngIf=\"control.errors.unique\"><small>{{control.errors.unique}}</small></div>\n    <div *ngIf=\"control.errors.lessThen\"><small>{{control.errors.lessThen}}</small></div>\n    <div *ngIf=\"control.errors.greaterThan\"><small>{{control.errors.greaterThan}}</small></div>\n    \n    <div *ngIf=\"control.errors.mobile\"><small>{{control.errors.mobile}}</small></div>\n    <div *ngIf=\"control.errors.confirmPassword\"><small>{{control.errors.confirmPassword}}</small></div> -->\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mensaje-error',\n  templateUrl: './mensaje-error.component.html',\n  styleUrls: ['./mensaje-error.component.css']\n})\nexport class MensajeErrorComponent {\n\n\n  @Input(\"control\")\n  control: any;\n\n  errorMsg: string = '';\n\n  constructor() { }\n\n  ngDoCheck() {\n    if (this.control) {\n      this.errorMsg = this.getErrors();\n    }\n  }\n\n  getErrors(): string {\n    return Object.entries(this.control?.errors ?? {})\n      .map(([key, msg]: [string, any]) => ({ key, msg }))[0]?.msg;\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}