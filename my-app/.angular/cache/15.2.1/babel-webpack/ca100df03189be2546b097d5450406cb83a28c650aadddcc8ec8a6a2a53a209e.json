{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/paises/paises.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/services/validador-form-usuarios/validador-form-usuarios.service\";\nimport * as i4 from \"src/app/core/services/spinner/spinner.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../shared/mensaje-error/mensaje-error.component\";\nfunction UsuariosComponent_div_0_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pais_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pais_r2.codigo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pais_r2.nombre, \" \");\n  }\n}\nfunction UsuariosComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 1)(3, \"div\", 3)(4, \"h2\");\n    i0.ɵɵtext(5, \"Mantenimiento\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\")(7, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function UsuariosComponent_div_0_Template_form_ngSubmit_7_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.submitForm());\n    });\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\");\n    i0.ɵɵtext(10, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 6)(12, \"app-mensaje-error\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\");\n    i0.ɵɵtext(15, \"Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 8)(17, \"app-mensaje-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\");\n    i0.ɵɵtext(20, \"Correo Electr\\u00F3nico\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 10)(22, \"app-mensaje-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 5)(24, \"label\");\n    i0.ɵɵtext(25, \"Fecha de Nacimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 11)(27, \"app-mensaje-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 5)(29, \"label\");\n    i0.ɵɵtext(30, \"tel\\u00E9fono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"input\", 12);\n    i0.ɵɵlistener(\"keypress\", function UsuariosComponent_div_0_Template_input_keypress_31_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.validarTelefono($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\", 13);\n    i0.ɵɵtext(34, \"Pa\\u00EDs de Residencia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"select\", 14);\n    i0.ɵɵtemplate(36, UsuariosComponent_div_0_option_36_Template, 2, 2, \"option\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"div\", 16);\n    i0.ɵɵelement(38, \"input\", 17);\n    i0.ɵɵelementStart(39, \"label\", 18);\n    i0.ɵɵtext(40, \"\\u00BFDesea recibir informaci\\u00F3n?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(41, \"button\", 19);\n    i0.ɵɵlistener(\"keyup.enter\", function UsuariosComponent_div_0_Template_button_keyup_enter_41_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.submitForm());\n    });\n    i0.ɵɵtext(42, \" Enviar \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(43, \"div\", 2)(44, \"div\", 1)(45, \"div\", 3)(46, \"h2\");\n    i0.ɵɵtext(47, \"Listado de Usuarios\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(48, \"div\")(49, \"table\", 20)(50, \"thead\")(51, \"tr\")(52, \"th\", 21);\n    i0.ɵɵtext(53, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"th\", 21);\n    i0.ɵɵtext(55, \"First\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"th\", 21);\n    i0.ɵɵtext(57, \"Last\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"th\", 21);\n    i0.ɵɵtext(59, \"Handle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"th\", 21);\n    i0.ɵɵtext(61, \"Acciones\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(62, \"tbody\")(63, \"tr\")(64, \"th\", 22);\n    i0.ɵɵtext(65, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(66, \"td\");\n    i0.ɵɵtext(67, \"Mark\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(68, \"td\");\n    i0.ɵɵtext(69, \"Otto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(70, \"td\");\n    i0.ɵɵtext(71, \"@mdo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(72, \"td\")(73, \"button\", 23);\n    i0.ɵɵtext(74, \"Editar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(75, \"tr\")(76, \"th\", 22);\n    i0.ɵɵtext(77, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(78, \"td\");\n    i0.ɵɵtext(79, \"Jacob\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(80, \"td\");\n    i0.ɵɵtext(81, \"Thornton\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(82, \"td\");\n    i0.ɵɵtext(83, \"@fat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(84, \"td\")(85, \"button\", 23);\n    i0.ɵɵtext(86, \"Editar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(87, \"tr\")(88, \"th\", 22);\n    i0.ɵɵtext(89, \"3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(90, \"td\");\n    i0.ɵɵtext(91, \"Larry\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(92, \"td\");\n    i0.ɵɵtext(93, \"the Bird\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(94, \"td\");\n    i0.ɵɵtext(95, \"@twitter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(96, \"td\")(97, \"button\", 23);\n    i0.ɵɵtext(98, \"Editar\");\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.userForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", (tmp_1_0 = ctx_r0.userForm.get(\"nombre\")) == null ? null : tmp_1_0.errors);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", (tmp_2_0 = ctx_r0.userForm.get(\"apellido\")) == null ? null : tmp_2_0.errors);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", (tmp_3_0 = ctx_r0.userForm.get(\"correo\")) == null ? null : tmp_3_0.errors);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", (tmp_4_0 = ctx_r0.userForm.get(\"fechaNacimiento\")) == null ? null : tmp_4_0.errors);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.paises);\n  }\n}\nexport class UsuariosComponent {\n  constructor(_paisesService, _fb, _validadorFormUsuariosService, _spinnerService) {\n    this._paisesService = _paisesService;\n    this._fb = _fb;\n    this._validadorFormUsuariosService = _validadorFormUsuariosService;\n    this._spinnerService = _spinnerService;\n    this.spinner = true;\n    this.paises = new Array();\n    this.userForm = this._fb.group({\n      uid: [null],\n      nombre: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correo: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Correo Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [Validators.maxLength(8)]],\n      paisResidencia: ['', [Validators.required]],\n      contacto: [false, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this._spinnerService.spinner$.emit(this.spinner);\n    this.getSpinner();\n    this.getPaises();\n  }\n  getSpinner() {\n    this._spinnerService.spinner$.subscribe(data => {\n      this.spinner = data;\n    });\n  }\n  validarTelefono(event) {\n    let patt = /^([0-9])$/;\n    return patt.test(event.key);\n  }\n  getPaises() {\n    this._paisesService.getPaises().subscribe(data => {\n      this.paises = data;\n      this.paises.sort((x, y) => x.nombre.localeCompare(y.nombre));\n      // tiempo para ver loading\n      setTimeout(() => {\n        this._spinnerService.spinner$.emit(false);\n      }, 1000);\n    });\n  }\n  submitForm() {\n    // this.userForm.get('fechaNacimiento')?.setValue(formatoFecha)\n    console.log(this.userForm);\n    if (this.userForm.valid) {\n      this.userForm.value.uid ? this.editarUsuario() : this.agregarUsuario();\n      // this.userForm.reset();\n    }\n  }\n\n  agregarUsuario() {\n    console.log(this.userForm);\n  }\n  editarUsuario() {}\n}\nUsuariosComponent.ɵfac = function UsuariosComponent_Factory(t) {\n  return new (t || UsuariosComponent)(i0.ɵɵdirectiveInject(i1.PaisesService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ValidadorFormUsuariosService), i0.ɵɵdirectiveInject(i4.SpinnerService));\n};\nUsuariosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsuariosComponent,\n  selectors: [[\"app-usuarios\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"row\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-md-6\", \"mt-4\"], [1, \"col-12\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"onkeydown\", \"return /[a-z, ]/i.test(event.key)\", \"formControlName\", \"nombre\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"text-capitalize\"], [3, \"control\"], [\"onkeydown\", \"return /[a-z, ]/i.test(event.key)\", \"formControlName\", \"apellido\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"text-capitalize\"], [1, \"margin-botton-error-label\", 3, \"control\"], [\"formControlName\", \"correo\", \"type\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"fechaNacimiento\", \"type\", \"date\", \"required\", \"\", 1, \"form-control\"], [\"maxlength\", \"8\", \"formControlName\", \"telefono\", \"type\", \"text\", 1, \"form-control\", 3, \"keypress\"], [\"for\", \"exampleInputPassword1\"], [\"required\", \"\", \"formControlName\", \"paisResidencia\", 1, \"custom-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"contacto\", \"id\", \"exampleCheck1\", 1, \"form-check-input\"], [\"for\", \"exampleCheck1\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"keyup.enter\"], [1, \"table\"], [\"scope\", \"col\"], [\"scope\", \"row\"], [1, \"btn\", \"btn-warning\"], [3, \"value\"]],\n  template: function UsuariosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UsuariosComponent_div_0_Template, 99, 6, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.spinner);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i6.MensajeErrorComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UsuariosComponent","constructor","_paisesService","_fb","_validadorFormUsuariosService","_spinnerService","Array","userForm","group","uid","nombre","required","requerido","minimo","apellido","correo","email","fechaNacimiento","telefono","maxLength","paisResidencia","contacto","ngOnInit","spinner$","emit","spinner","getSpinner","getPaises","subscribe","data","validarTelefono","event","patt","test","key","paises","sort","x","y","localeCompare","setTimeout","submitForm","console","log","valid","value","editarUsuario","agregarUsuario","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\usuarios\\usuarios.component.ts","C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\usuarios\\usuarios.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PaisModel } from 'src/app/core/models/Pais.model';\nimport { PaisesModel } from 'src/app/core/models/Paises.model';\nimport { PaisesService } from 'src/app/core/services/paises/paises.service';\nimport { SpinnerService } from 'src/app/core/services/spinner/spinner.service';\nimport { ValidadorFormUsuariosService } from 'src/app/core/services/validador-form-usuarios/validador-form-usuarios.service';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n\n  spinner: boolean = true;\n  userForm: FormGroup;\n  paises: Array<PaisModel> = new Array<PaisModel>();\n\n  public constructor(\n    private _paisesService: PaisesService,\n    private _fb: FormBuilder,\n    private _validadorFormUsuariosService: ValidadorFormUsuariosService,\n    public _spinnerService: SpinnerService\n  ) {\n\n    this.userForm = this._fb.group({\n      uid: [null],\n      nombre: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correo: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Correo Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [Validators.maxLength(8)]],\n      paisResidencia: ['', [Validators.required]],\n      contacto: [false, [Validators.required]],\n    });\n\n  }\n\n  ngOnInit() {\n    this._spinnerService.spinner$.emit(this.spinner);\n    this.getSpinner();\n    this.getPaises();\n  }\n\n  getSpinner() {\n    this._spinnerService.spinner$.subscribe(data => {\n      this.spinner = data;\n    })\n  }\n\n  validarTelefono(event: any) {\n    let patt = /^([0-9])$/;\n    return patt.test(event.key);\n  }\n\n  getPaises() {\n\n    this._paisesService.getPaises().subscribe((data: PaisModel[]) => {\n      this.paises = data;\n      this.paises.sort((x, y) => x.nombre.localeCompare(y.nombre));\n\n      // tiempo para ver loading\n      setTimeout(() => {\n        this._spinnerService.spinner$.emit(false);\n      }, 1000);\n    })\n  }\n\n  submitForm() {\n\n\n    // this.userForm.get('fechaNacimiento')?.setValue(formatoFecha)\n\n    console.log(this.userForm);\n\n    if (this.userForm.valid) {\n\n\n\n      (this.userForm.value.uid) ? this.editarUsuario() : this.agregarUsuario();\n      // this.userForm.reset();\n    }\n\n  }\n\n  agregarUsuario() {\n    console.log(this.userForm);\n\n  }\n\n  editarUsuario() {\n\n  }\n\n}\n","<div *ngIf=\"!spinner\" class=\"row\">\n  <div class=\"col-md-6 mt-4\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h2>Mantenimiento</h2>\n      </div>\n    </div>\n\n    <div>\n      <form autocomplete=\"off\" [formGroup]=\"userForm\" (ngSubmit)=\"submitForm()\">\n        <!-- Nombre -->\n        <div class=\"form-group\">\n          <label>Nombre</label>\n          <input\n            onkeydown=\"return /[a-z, ]/i.test(event.key)\"\n            formControlName=\"nombre\"\n            type=\"text\"\n            class=\"form-control text-capitalize\"\n            required\n          />\n          <app-mensaje-error\n            [control]=\"userForm.get('nombre')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- Apellido -->\n        <div class=\"form-group\">\n          <label>Apellido</label>\n          <input\n            onkeydown=\"return /[a-z, ]/i.test(event.key)\"\n            formControlName=\"apellido\"\n            type=\"text\"\n            class=\"form-control text-capitalize\"\n            required\n          />\n          <app-mensaje-error\n            class=\"margin-botton-error-label\"\n            [control]=\"userForm.get('apellido')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- Correo Electrónico -->\n        <div class=\"form-group\">\n          <label>Correo Electrónico</label>\n          <input formControlName=\"correo\" type=\"email\" class=\"form-control\" required/>\n          <app-mensaje-error\n            class=\"margin-botton-error-label\"\n            [control]=\"userForm.get('correo')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- fecha nacimiento  -->\n        <div class=\"form-group\">\n          <label>Fecha de Nacimiento</label>\n          <input\n            formControlName=\"fechaNacimiento\"\n            type=\"date\"\n            class=\"form-control\"\n            required\n          />\n          <app-mensaje-error\n            class=\"margin-botton-error-label\"\n            [control]=\"userForm.get('fechaNacimiento')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- telefono  -->\n        <div class=\"form-group\">\n          <label>teléfono</label>\n          <input\n            (keypress)=\"validarTelefono($event)\"\n            maxlength=\"8\"\n            formControlName=\"telefono\"\n            type=\"text\"\n            class=\"form-control\"\n          />\n        </div>\n\n        <!-- pais de residencia  -->\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">País de Residencia</label>\n          <select required formControlName=\"paisResidencia\" class=\"custom-select\">\n            <option *ngFor=\"let pais of paises\" [value]=\"pais.codigo\">\n              {{ pais.nombre }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group form-check\">\n          <input\n            type=\"checkbox\"\n            formControlName=\"contacto\"\n            class=\"form-check-input\"\n            id=\"exampleCheck1\"\n          />\n          <label class=\"form-check-label\" for=\"exampleCheck1\"\n            >¿Desea recibir información?</label\n          >\n        </div>\n\n        <!-- disabled=\"userForm.valid\" -->\n        <button\n          (keyup.enter)=\"submitForm()\"\n          type=\"submit\"\n          class=\"btn btn-primary btn-block\"\n        >\n          Enviar\n        </button>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-6 mt-4\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h2>Listado de Usuarios</h2>\n      </div>\n    </div>\n\n    <div>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">First</th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Handle</th>\n            <th scope=\"col\">Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n            <td>\n              <button class=\"btn btn-warning\">Editar</button>\n            </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n            <td>\n              <button class=\"btn btn-warning\">Editar</button>\n            </td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n            <td>\n              <button class=\"btn btn-warning\">Editar</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}