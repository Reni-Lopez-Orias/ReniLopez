{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet UsuariosComponent = class UsuariosComponent {\n  constructor(_paisesService, _fb, _validadorFormUsuariosService) {\n    this._paisesService = _paisesService;\n    this._fb = _fb;\n    this._validadorFormUsuariosService = _validadorFormUsuariosService;\n    this.paises = [];\n    this.loading = false;\n    this.userForm = this._fb.group({\n      uid: [null],\n      nombre: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correo: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Correo Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [Validators.required, Validators.maxLength(2)]],\n      paisResidencia: ['', [Validators.required]],\n      contacto: [false, [Validators.required]]\n    });\n  }\n  numericOnly(event) {\n    let patt = /^([0-9])$/;\n    let result = patt.test(event.key);\n    return result;\n  }\n  ngOnInit() {\n    this.getPaises();\n  }\n  getPaises() {\n    this._paisesService.getPaises().subscribe(data => {\n      this.paises = data;\n      // tiempo para ver loading\n      // setTimeout(() => {\n      //   this.loading = false;\n      // }, 1500);\n    });\n  }\n\n  submitForm() {\n    if (this.userForm.valid) {\n      this.loading = true;\n      this.userForm.value.uid ? this.editarUsuario() : this.agregarUsuario();\n      this.userForm.reset();\n      this.loading = false;\n    }\n  }\n  agregarUsuario() {\n    console.log(this.userForm);\n  }\n  editarUsuario() {}\n};\nUsuariosComponent = __decorate([Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})], UsuariosComponent);\nexport { UsuariosComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","UsuariosComponent","constructor","_paisesService","_fb","_validadorFormUsuariosService","userForm","group","uid","nombre","required","requerido","minimo","apellido","correo","email","fechaNacimiento","telefono","maxLength","paisResidencia","contacto","numericOnly","event","patt","result","test","key","ngOnInit","getPaises","subscribe","data","paises","submitForm","valid","loading","value","editarUsuario","agregarUsuario","reset","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\usuarios\\usuarios.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PaisesModel } from 'src/app/core/models/Paises.model';\nimport { PaisesService } from 'src/app/core/paises/paises.service';\nimport { ValidadorFormUsuariosService } from 'src/app/core/validador-form-usuarios/validador-form-usuarios.service';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n\n  userForm: FormGroup;\n  paises: PaisesModel[] = [];\n  loading: boolean = false;\n\n  public constructor(\n    private _paisesService: PaisesService,\n    private _fb: FormBuilder,\n    private _validadorFormUsuariosService: ValidadorFormUsuariosService\n  ) {\n\n    this.userForm = this._fb.group({\n      uid: [null],\n      nombre: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correo: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Correo Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [ Validators.required, Validators.maxLength(2)]  ],\n      paisResidencia: ['', [Validators.required]],\n      contacto: [false, [Validators.required]],\n    });\n\n  }\n\n  numericOnly(event): boolean {    \n    let patt = /^([0-9])$/;\n    let result = patt.test(event.key);\n    return result;\n}\n\n  ngOnInit() {\n    this.getPaises();\n  }\n\n  getPaises() {\n    this._paisesService.getPaises().subscribe((data: any) => {\n\n      this.paises = data;\n      // tiempo para ver loading\n      // setTimeout(() => {\n      //   this.loading = false;\n      // }, 1500);\n    })\n  }\n\n  submitForm() {\n\n    if (this.userForm.valid) {\n      this.loading = true;\n      (this.userForm.value.uid) ? this.editarUsuario() : this.agregarUsuario();\n      this.userForm.reset();\n      this.loading = false;\n    }\n\n  }\n\n  agregarUsuario() {\n    console.log(this.userForm);\n\n  }\n\n  editarUsuario() {\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}