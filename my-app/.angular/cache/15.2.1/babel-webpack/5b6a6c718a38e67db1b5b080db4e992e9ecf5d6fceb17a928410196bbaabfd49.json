{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Acciones, CodigosRespuesta } from \"../../core/enums/codigo-respuesta\";\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/paises/paises.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/services/validador-form-usuarios/validador-form-usuarios.service\";\nimport * as i4 from \"src/app/core/services/spinner/spinner.service\";\nimport * as i5 from \"src/app/core/services/usuarios/usuarios.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"angular-datatables\";\nimport * as i8 from \"../shared/mensaje-error/mensaje-error.component\";\nfunction UsuariosComponent_div_0_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pais_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pais_r3.codigo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pais_r3.nombre, \" \");\n  }\n}\nfunction UsuariosComponent_div_0_tr_71_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\")(17, \"div\", 16);\n    i0.ɵɵelement(18, \"input\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\", 24)(20, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function UsuariosComponent_div_0_tr_71_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const usuario_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.seleccionarUsuario(usuario_r4));\n    });\n    i0.ɵɵtext(21, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function UsuariosComponent_div_0_tr_71_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const usuario_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.eliminarUsuario(usuario_r4));\n    });\n    i0.ɵɵtext(23, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const usuario_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r5 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usuario_r4.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usuario_r4.apellido);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usuario_r4.correoElectronico);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 8, usuario_r4.fechaNacimiento, \"yyyy/MM/dd\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(usuario_r4.telefono);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usuario_r4.paisResidencia);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"checked\", usuario_r4.contacto);\n  }\n}\nfunction UsuariosComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 1)(3, \"div\", 3)(4, \"h2\");\n    i0.ɵɵtext(5, \"Mantenimiento\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\")(7, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function UsuariosComponent_div_0_Template_form_ngSubmit_7_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.submitForm());\n    });\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\");\n    i0.ɵɵtext(10, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 6)(12, \"app-mensaje-error\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\");\n    i0.ɵɵtext(15, \"Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 8)(17, \"app-mensaje-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\");\n    i0.ɵɵtext(20, \"Correo Electr\\u00F3nico\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 10)(22, \"app-mensaje-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 5)(24, \"label\");\n    i0.ɵɵtext(25, \"Fecha de Nacimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 11)(27, \"app-mensaje-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 5)(29, \"label\");\n    i0.ɵɵtext(30, \"tel\\u00E9fono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"input\", 12);\n    i0.ɵɵlistener(\"keypress\", function UsuariosComponent_div_0_Template_input_keypress_31_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.validarTelefono($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\", 13);\n    i0.ɵɵtext(34, \"Pa\\u00EDs de Residencia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"select\", 14);\n    i0.ɵɵtemplate(36, UsuariosComponent_div_0_option_36_Template, 2, 2, \"option\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"div\", 16);\n    i0.ɵɵelement(38, \"input\", 17);\n    i0.ɵɵelementStart(39, \"label\", 18);\n    i0.ɵɵtext(40, \"\\u00BFDesea recibir informaci\\u00F3n?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(41, \"button\", 19);\n    i0.ɵɵlistener(\"keyup.enter\", function UsuariosComponent_div_0_Template_button_keyup_enter_41_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.submitForm());\n    });\n    i0.ɵɵtext(42, \" Enviar \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(43, \"div\", 2)(44, \"div\", 1)(45, \"div\", 3)(46, \"h2\");\n    i0.ɵɵtext(47, \"Listado de Usuarios\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(48, \"div\")(49, \"table\", 20)(50, \"thead\")(51, \"tr\")(52, \"th\");\n    i0.ɵɵtext(53, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"th\");\n    i0.ɵɵtext(55, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"th\");\n    i0.ɵɵtext(57, \"Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"th\");\n    i0.ɵɵtext(59, \"Correo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"th\");\n    i0.ɵɵtext(61, \"F. Nacimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(62, \"th\");\n    i0.ɵɵtext(63, \"Tel\\u00E9fono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(64, \"th\");\n    i0.ɵɵtext(65, \"P. Residencia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(66, \"th\");\n    i0.ɵɵtext(67, \"Contacto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(68, \"th\");\n    i0.ɵɵtext(69, \"Acciones\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(70, \"tbody\");\n    i0.ɵɵtemplate(71, UsuariosComponent_div_0_tr_71_Template, 24, 11, \"tr\", 21);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.userForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", (tmp_1_0 = ctx_r0.userForm.get(\"nombre\")) == null ? null : tmp_1_0.errors);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", (tmp_2_0 = ctx_r0.userForm.get(\"apellido\")) == null ? null : tmp_2_0.errors);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"control\", (tmp_3_0 = ctx_r0.userForm.get(\"correoElectronico\")) == null ? null : tmp_3_0.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"max\", ctx_r0.fecha);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"control\", (tmp_5_0 = ctx_r0.userForm.get(\"fechaNacimiento\")) == null ? null : tmp_5_0.errors);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.paises);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.userForm.invalid);\n    i0.ɵɵadvance(30);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.usuarios);\n  }\n}\nexport class UsuariosComponent {\n  constructor(_paisesService, _fb, _validadorFormUsuariosService, _spinnerService, _usuarioService) {\n    this._paisesService = _paisesService;\n    this._fb = _fb;\n    this._validadorFormUsuariosService = _validadorFormUsuariosService;\n    this._spinnerService = _spinnerService;\n    this._usuarioService = _usuarioService;\n    this.spinner = true;\n    this.paises = new Array();\n    this.fecha = \"\";\n    this.usuarios = new Array();\n    this.userForm = this._fb.group({\n      id: [null],\n      nombre: ['reni', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['reni', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correoElectronico: ['reni@reni.com', [Validators.required, this._validadorFormUsuariosService.requerido('correoElectronico Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [Validators.maxLength(8)]],\n      paisResidencia: ['CRC', [Validators.required]],\n      contacto: [false, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.obtenerUsuarios();\n    this.formatoFechaForm();\n    this.getSpinner();\n    this.getPaises();\n  }\n  obtenerUsuarios() {\n    this._usuarioService.obtenerUsuarios().subscribe(response => {\n      this.validateResponse(response, Acciones.Ver);\n    });\n  }\n  submitForm() {\n    if (this.userForm.valid) {\n      this.userForm.value.uid ? this.editarUsuario() : this.agregarUsuario();\n    }\n  }\n  agregarUsuario() {\n    let usuario = this.userForm.value;\n    this._usuarioService.agregarUsuario(usuario).subscribe(response => {\n      this.validateResponse(response, Acciones.Agregar);\n    });\n  }\n  editarUsuario() {\n    let usuario = this.userForm.value;\n    this._usuarioService.agregarUsuario(usuario).subscribe(response => {\n      this.validateResponse(response, Acciones.Editar);\n    });\n  }\n  seleccionarUsuario(usuario) {\n    console.log(usuario);\n    this.userForm.get('id')?.setValue(usuario.id);\n    this.userForm.get('nombre')?.setValue(usuario.nombre);\n    this.userForm.get('apellido')?.setValue(usuario.apellido);\n    this.userForm.get('correoElectronico')?.setValue(usuario.correoElectronico);\n    this.userForm.get('fechaNacimiento')?.setValue(usuario.fechaNacimiento);\n    this.userForm.get('telefono')?.setValue(usuario.telefono);\n    this.userForm.get('paisResidencia')?.setValue(usuario.paisResidencia);\n    this.userForm.get('contacto')?.setValue(usuario.contacto);\n  }\n  eliminarUsuario(usuario) {\n    console.log(usuario);\n    var idUser = usuario.id;\n  }\n  validateResponse(response, action) {\n    var agregar = Acciones.Agregar == action && \"Agregado\";\n    var editar = Acciones.Editar == action && \"Editado\";\n    var eliminar = Acciones.Eliminar == action && \"Eliminado\";\n    if (action == Acciones.Ver) {\n      this.usuarios = response.respuesta;\n    }\n    if (response.codigoRespuesta == CodigosRespuesta.Exito) {\n      if (agregar) {\n        Swal.fire(`${agregar} Correctamente!`, 'You clicked the button!', 'success');\n      }\n      if (editar) {\n        Swal.fire(`${editar} Correctamente!`, 'You clicked the button!', 'success');\n      }\n      if (eliminar) {\n        Swal.fire(`${eliminar} Correctamente!`, 'You clicked the button!', 'success');\n      }\n    } else {}\n  }\n  formatoFechaForm() {\n    var fechaTemp = new Date().toISOString();\n    this.fecha = fechaTemp.toString().slice(0, -14);\n  }\n  getSpinner() {\n    this._spinnerService.spinner$.subscribe(data => {\n      this.spinner = data;\n    });\n  }\n  getPaises() {\n    this._paisesService.getPaises().subscribe(data => {\n      this.paises = data;\n      this.paises.sort((x, y) => x.nombre.localeCompare(y.nombre));\n      // tiempo para ver loading\n      setTimeout(() => {\n        this._spinnerService.spinner$.emit(false);\n        this.spinner = false;\n      }, 1000);\n    });\n  }\n  customResetForm() {\n    this.userForm.reset({\n      id: null,\n      nombre: '',\n      apellido: '',\n      correoElectronico: '',\n      fechaNacimiento: '',\n      telefono: '',\n      paisResidencia: '',\n      contacto: false\n    });\n  }\n  validarTelefono(event) {\n    let patt = /^([0-9])$/;\n    return patt.test(event.key);\n  }\n}\nUsuariosComponent.ɵfac = function UsuariosComponent_Factory(t) {\n  return new (t || UsuariosComponent)(i0.ɵɵdirectiveInject(i1.PaisesService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ValidadorFormUsuariosService), i0.ɵɵdirectiveInject(i4.SpinnerService), i0.ɵɵdirectiveInject(i5.UsuariosService));\n};\nUsuariosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsuariosComponent,\n  selectors: [[\"app-usuarios\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"row\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-md-6\", \"mt-4\"], [1, \"col-12\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"onkeydown\", \"return /^[a-zA-Z\\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00C1\\u00C9\\u00CD\\u00D3\\u00DA]+$/i.test(event.key)\", \"formControlName\", \"nombre\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"text-capitalize\"], [3, \"control\"], [\"onkeydown\", \"return /^[a-zA-Z\\u00F1\\u00D1\\u00E1\\u00E9\\u00ED\\u00F3\\u00FA\\u00C1\\u00C9\\u00CD\\u00D3\\u00DA]+$/i.test(event.key)\", \"formControlName\", \"apellido\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"text-capitalize\"], [1, \"margin-botton-error-label\", 3, \"control\"], [\"formControlName\", \"correoElectronico\", \"type\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"fechaNacimiento\", \"type\", \"date\", \"required\", \"\", 1, \"form-control\", 3, \"max\"], [\"maxlength\", \"8\", \"minlength\", \"8\", \"formControlName\", \"telefono\", \"type\", \"text\", 1, \"form-control\", 3, \"keypress\"], [\"for\", \"exampleInputPassword1\"], [\"required\", \"\", \"formControlName\", \"paisResidencia\", 1, \"custom-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"contacto\", \"id\", \"exampleCheck1\", 1, \"form-check-input\"], [\"for\", \"exampleCheck1\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"disabled\", \"keyup.enter\"], [\"datatable\", \"\", 1, \"row-border\", \"hover\", \"table-responsive\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"disabled\", \"\", \"type\", \"checkbox\", \"id\", \"exampleCheck1\", 1, \"form-check-input\", 3, \"checked\"], [2, \"display\", \"flex\"], [1, \"btn\", \"btn-warning\", \"mr-2\", \"text-white\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function UsuariosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UsuariosComponent_div_0_Template, 72, 9, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.spinner);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i7.DataTableDirective, i8.MensajeErrorComponent, i6.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Acciones","CodigosRespuesta","Swal","i0","UsuariosComponent","constructor","_paisesService","_fb","_validadorFormUsuariosService","_spinnerService","_usuarioService","Array","userForm","group","id","nombre","required","requerido","minimo","apellido","correoElectronico","email","fechaNacimiento","telefono","maxLength","paisResidencia","contacto","ngOnInit","obtenerUsuarios","formatoFechaForm","getSpinner","getPaises","subscribe","response","validateResponse","Ver","submitForm","valid","value","uid","editarUsuario","agregarUsuario","usuario","Agregar","Editar","seleccionarUsuario","console","log","get","setValue","eliminarUsuario","idUser","action","agregar","editar","eliminar","Eliminar","usuarios","respuesta","codigoRespuesta","Exito","fire","fechaTemp","Date","toISOString","fecha","toString","slice","spinner$","data","spinner","paises","sort","x","y","localeCompare","setTimeout","emit","customResetForm","reset","validarTelefono","event","patt","test","key","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\usuarios\\usuarios.component.ts","C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\components\\usuarios\\usuarios.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PaisModel } from 'src/app/core/models/Pais.model';\nimport { RespuestUsuariosInterface } from 'src/app/core/models/RespuestaUsuarios.interface';\nimport { PaisesService } from 'src/app/core/services/paises/paises.service';\nimport { SpinnerService } from 'src/app/core/services/spinner/spinner.service';\nimport { UsuariosService } from 'src/app/core/services/usuarios/usuarios.service';\nimport { ValidadorFormUsuariosService } from 'src/app/core/services/validador-form-usuarios/validador-form-usuarios.service';\nimport { Acciones, CodigosRespuesta } from \"../../core/enums/codigo-respuesta\";\nimport Swal from 'sweetalert2'\nimport { UsuarioInterface } from 'src/app/core/models/Usuario.interface';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit {\n\n  spinner: boolean = true;\n  userForm: FormGroup;\n  paises: Array<PaisModel> = new Array<PaisModel>();\n  fecha: string = \"\";\n  usuarios: Array<UsuarioInterface> = new Array<UsuarioInterface>();\n\n  public constructor(\n    private _paisesService: PaisesService,\n    private _fb: FormBuilder,\n    private _validadorFormUsuariosService: ValidadorFormUsuariosService,\n    public _spinnerService: SpinnerService,\n    private _usuarioService: UsuariosService\n  ) {\n\n    this.userForm = this._fb.group({\n      id: [null],\n      nombre: ['reni', [Validators.required, this._validadorFormUsuariosService.requerido('Nombre'), this._validadorFormUsuariosService.minimo(3, 'Nombre')]],\n      apellido: ['reni', [Validators.required, this._validadorFormUsuariosService.requerido('Apellido'), this._validadorFormUsuariosService.minimo(3, 'Apellido')]],\n      correoElectronico: ['reni@reni.com', [Validators.required, this._validadorFormUsuariosService.requerido('correoElectronico Electrónico'), this._validadorFormUsuariosService.email]],\n      fechaNacimiento: ['', [Validators.required, this._validadorFormUsuariosService.requerido('Fecha Nacimiento')]],\n      telefono: ['', [Validators.maxLength(8)]],\n      paisResidencia: ['CRC', [Validators.required]],\n      contacto: [false, [Validators.required]],\n    });\n\n  }\n  \n  ngOnInit() {\n    this.obtenerUsuarios();\n    this.formatoFechaForm();\n    this.getSpinner();\n    this.getPaises(); \n  }\n\n  obtenerUsuarios(){\n    this._usuarioService.obtenerUsuarios().subscribe(response => { \n      this.validateResponse(response,Acciones.Ver); \n    })\n  }\n\n  submitForm() {\n    if (this.userForm.valid) {\n      (this.userForm.value.uid) ? this.editarUsuario() : this.agregarUsuario();\n    }\n  }\n\n  agregarUsuario() {\n    let usuario = this.userForm.value;\n\n    this._usuarioService.agregarUsuario(usuario).subscribe((response: any) => {\n      this.validateResponse(response, Acciones.Agregar);\n    })\n\n  }\n\n  editarUsuario() {\n    let usuario = this.userForm.value;\n    this._usuarioService.agregarUsuario(usuario).subscribe((response: any) => {\n      this.validateResponse(response, Acciones.Editar);\n    })\n  }\n\n  seleccionarUsuario(usuario: UsuarioInterface){\n    console.log(usuario);\n\n    this.userForm.get('id')?.setValue(usuario.id);\n    this.userForm.get('nombre')?.setValue(usuario.nombre);\n    this.userForm.get('apellido')?.setValue(usuario.apellido);\n    this.userForm.get('correoElectronico')?.setValue(usuario.correoElectronico);\n    this.userForm.get('fechaNacimiento')?.setValue(usuario.fechaNacimiento);\n    this.userForm.get('telefono')?.setValue(usuario.telefono);\n    this.userForm.get('paisResidencia')?.setValue(usuario.paisResidencia);\n    this.userForm.get('contacto')?.setValue(usuario.contacto);\n \n  }\n\n  eliminarUsuario(usuario: UsuarioInterface){\n    console.log(usuario);\n    var idUser = usuario.id;\n\n\n  }\n\n  validateResponse(response: RespuestUsuariosInterface, action: number) {\n\n    var agregar = Acciones.Agregar == action && \"Agregado\";\n    var editar = Acciones.Editar == action && \"Editado\";\n    var eliminar = Acciones.Eliminar == action && \"Eliminado\";\n\n    if (action == Acciones.Ver) {\n      this.usuarios = response.respuesta\n    }\n\n    if (response.codigoRespuesta == CodigosRespuesta.Exito) {\n\n      if (agregar) {\n        Swal.fire(\n          `${agregar} Correctamente!`,\n          'You clicked the button!',\n          'success'\n        )\n      }\n      if (editar) {\n        Swal.fire(\n          `${editar} Correctamente!`,\n          'You clicked the button!',\n          'success'\n        )\n      }\n      if (eliminar) {\n        Swal.fire(\n          `${eliminar} Correctamente!`,\n          'You clicked the button!',\n          'success'\n        )\n      }\n\n     \n    } else {\n\n    }\n\n  }\n\n  formatoFechaForm() {\n    var fechaTemp = new Date().toISOString();\n    this.fecha = fechaTemp.toString().slice(0, -14);\n  }\n\n\n  getSpinner() {\n    this._spinnerService.spinner$.subscribe(data => {\n      this.spinner = data;\n    })\n  }\n\n  getPaises() {\n\n    this._paisesService.getPaises().subscribe((data: PaisModel[]) => {\n      this.paises = data;\n      this.paises.sort((x, y) => x.nombre.localeCompare(y.nombre));\n\n      // tiempo para ver loading\n      setTimeout(() => {\n        this._spinnerService.spinner$.emit(false);\n        this.spinner = false;\n      }, 1000);\n    })\n  }\n\n \n\n  customResetForm() {\n    this.userForm.reset({\n      id: null,\n      nombre: '',\n      apellido: '',\n      correoElectronico: '',\n      fechaNacimiento: '',\n      telefono: '',\n      paisResidencia: '',\n      contacto: false,\n    });\n  }\n\n  validarTelefono(event: any) {\n    let patt = /^([0-9])$/;\n    return patt.test(event.key);\n  }\n\n}\n","<div *ngIf=\"!spinner\" class=\"row\">\n  <div class=\"col-md-6 mt-4\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h2>Mantenimiento</h2>\n      </div>\n    </div>\n\n    <div>\n      <form autocomplete=\"off\" [formGroup]=\"userForm\" (ngSubmit)=\"submitForm()\">\n        <!-- Nombre -->\n        <div class=\"form-group\">\n          <label>Nombre</label>\n          <input\n            onkeydown=\"return /^[a-zA-ZñÑáéíóúÁÉÍÓÚ]+$/i.test(event.key)\"\n            formControlName=\"nombre\"\n            type=\"text\"\n            class=\"form-control text-capitalize\"\n            required\n          />\n          <app-mensaje-error\n            [control]=\"userForm.get('nombre')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- Apellido -->\n        <div class=\"form-group\">\n          <label>Apellido</label>\n          <input\n            onkeydown=\"return /^[a-zA-ZñÑáéíóúÁÉÍÓÚ]+$/i.test(event.key)\"\n            formControlName=\"apellido\"\n            type=\"text\"\n            class=\"form-control text-capitalize\"\n            required\n          />\n          <app-mensaje-error\n            class=\"margin-botton-error-label\"\n            [control]=\"userForm.get('apellido')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- Correo Electrónico -->\n        <div class=\"form-group\">\n          <label>Correo Electrónico</label>\n          <input\n            formControlName=\"correoElectronico\"\n            type=\"email\"\n            class=\"form-control\"\n            required\n          />\n          <app-mensaje-error\n            class=\"margin-botton-error-label\"\n            [control]=\"userForm.get('correoElectronico')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- fecha nacimiento  -->\n        <div class=\"form-group\">\n          <label>Fecha de Nacimiento</label>\n          <input\n            [max]=\"this.fecha\"\n            formControlName=\"fechaNacimiento\"\n            type=\"date\"\n            class=\"form-control\"\n            required\n          />\n          <app-mensaje-error\n            class=\"margin-botton-error-label\"\n            [control]=\"userForm.get('fechaNacimiento')?.errors\"\n          ></app-mensaje-error>\n        </div>\n\n        <!-- telefono  -->\n        <div class=\"form-group\">\n          <label>teléfono</label>\n          <input\n            (keypress)=\"validarTelefono($event)\"\n            maxlength=\"8\"\n            minlength=\"8\"\n            formControlName=\"telefono\"\n            type=\"text\"\n            class=\"form-control\"\n          />\n        </div>\n\n        <!-- pais de residencia  -->\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">País de Residencia</label>\n          <select\n            required\n            formControlName=\"paisResidencia\"\n            class=\"custom-select\"\n          >\n            <option *ngFor=\"let pais of paises\" [value]=\"pais.codigo\">\n              {{ pais.nombre }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group form-check\">\n          <input\n            type=\"checkbox\"\n            formControlName=\"contacto\"\n            class=\"form-check-input\"\n            id=\"exampleCheck1\"\n          />\n          <label class=\"form-check-label\" for=\"exampleCheck1\"\n            >¿Desea recibir información?</label\n          >\n        </div>\n\n        <!--  -->\n        <button\n          [disabled]=\"userForm.invalid\"\n          (keyup.enter)=\"submitForm()\"\n          type=\"submit\"\n          class=\"btn btn-primary btn-block\"\n        >\n          Enviar\n        </button>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-6 mt-4\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h2>Listado de Usuarios</h2>\n      </div>\n    </div>\n\n    <div>\n      <table datatable class=\"row-border hover table-responsive\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Correo</th>\n            <th>F. Nacimiento</th>\n            <th>Teléfono</th>\n            <th>P. Residencia</th>\n            <th>Contacto</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let usuario of usuarios; let i = index\">\n            <td>{{ i + 1 }}</td>\n            <td>{{ usuario.nombre }}</td>\n            <td>{{ usuario.apellido }}</td>\n            <td>{{ usuario.correoElectronico }}</td>\n            <td>{{ usuario.fechaNacimiento | date:'yyyy/MM/dd' }}</td>\n            <td>{{ usuario.telefono }}</td>\n            <td>{{ usuario.paisResidencia }}</td>\n            <td>   \n              <div class=\"form-group form-check\">\n                <input disabled type=\"checkbox\" [checked]=\"usuario.contacto\" class=\"form-check-input\" id=\"exampleCheck1\"> \n              </div> \n            </td>\n            <td style=\"display: flex\">\n              <button class=\"btn btn-warning mr-2 text-white\" (click)=\"seleccionarUsuario(usuario)\">Editar</button>\n              <button class=\"btn btn-danger\" (click)=\"eliminarUsuario(usuario)\">Eliminar</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}