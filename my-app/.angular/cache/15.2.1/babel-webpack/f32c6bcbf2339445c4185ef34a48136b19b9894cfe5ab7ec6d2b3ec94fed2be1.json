{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class InterceptorService {\n  constructor() {}\n  intercept(req, next) {\n    console.log('entra interceptor');\n    //se pueden agregar params y headers\n    let headers = new HttpHeaders({\n      'token': 'ABC123',\n      'token-usuario': 'ABC123'\n    });\n    // si necestia enviar tokens\n    // const reqClone = req.clone({headers })\n    return next.handle(reqClone).pipe(catchError(this.manejoErrores));\n  }\n  manejoErrores(error) {\n    return throwError(error);\n  }\n}\nInterceptorService.ɵfac = function InterceptorService_Factory(t) {\n  return new (t || InterceptorService)();\n};\nInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InterceptorService,\n  factory: InterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAoDA,WAAW,QAAsC,sBAAsB;AAE3H,SAASC,UAAU,EAAcC,UAAU,QAAQ,MAAM;;AAKzD,OAAM,MAAOC,kBAAkB;EAE7BC,eAAgB;EAEhBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAEhC;IACA,IAAIC,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC5B,OAAO,EAAE,QAAQ;MACjB,eAAe,EAAE;KAClB,CAAC;IAEF;IACA;IAEA,OAAOO,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,CAACC,IAAI,CAC/BZ,UAAU,CAAE,IAAI,CAACa,aAAa,CAAE,CACjC;EAEH;EACAA,aAAa,CAACC,KAAwB;IACpC,OAAOb,UAAU,CAACa,KAAK,CAAC;EAC1B;;AAvBWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAa,SAAlBb,kBAAkB;EAAAc,YAFjB;AAAM","names":["HttpHeaders","catchError","throwError","InterceptorService","constructor","intercept","req","next","console","log","headers","handle","reqClone","pipe","manejoErrores","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Usuario\\Documents\\Reni\\reni_lopez_orias\\my-app\\src\\app\\core\\interceptor\\interceptor.service.ts"],"sourcesContent":["import { HttpErrorResponse, HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log('entra interceptor');\n    \n    //se pueden agregar params y headers\n    let headers = new HttpHeaders({\n      'token': 'ABC123',\n      'token-usuario': 'ABC123'\n    });\n\n    // si necestia enviar tokens\n    // const reqClone = req.clone({headers })\n\n    return next.handle(reqClone).pipe(\n      catchError( this.manejoErrores )\n    );\n    \n  }\n  manejoErrores(error: HttpErrorResponse) {\n    return throwError(error)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}